<!DOCTYPE html>
<html>
<%- include('partials/head'); %><!-- ejs inserts head -->
<body>

<%- include('partials/header'); %><!-- ejs inserts header -->

<h1>Knapsack Page</h1>

<%- include('partials/code_viewer'); %>

<%- include('partials/table_viewer'); %>

<%- include('partials/footer'); %><!-- ejs inserts footer -->

<script>
    
    function closeCodeViewer() {
        var panel = document.getElementById("code-viewer");

        panel.classList.remove("show");

        setTimeout(function () {
            panel.style.display = "none";
        }, 500); //500ms
    }

    function openCodeViewer() {
        var panel = document.getElementById("code-viewer");
        
        panel.style.display = "block";

        setTimeout(function () {
            panel.classList.add("show");
        }, 10);
    }

    function closeTableViewer() {
        var panel = document.getElementById("table-viewer");

        panel.classList.remove("show");

        setTimeout(function () {
            panel.style.display = "none";
        }, 500); //500ms
    }

    function openTableViewer() {
        var panel = document.getElementById("table-viewer");
        
        panel.style.display = "block";

        setTimeout(function () {
            panel.classList.add("show");
        }, 10);
    }


    function generateTable() {
        var weight = ["1", "2", "2"];
        var value = ["25", "30", "22"];

        var vdw = [];
        //calc Value/Weight array
        for (var i = 0; i < weight.length; i++) {
            vdw.push(parseFloat(value[i]) / parseFloat(weight[i]));
        }

        var gridData = [
            ["Weight", ...weight],
            ["Value", ...value],
            ["Value/Weight", ...vdw]
        ];

        const gridContainer = document.getElementById('tv-grid');

        const numColumns = weight.length + 1;

        let columnTemplate = '';
        for (let i = 0; i < numColumns; i++) {
            columnTemplate += 'auto ';
        }
        columnTemplate = columnTemplate.trim();

        gridContainer.style.gridTemplateColumns = columnTemplate;


        gridData.forEach(row => {
            row.forEach((cell) => {
                const div = document.createElement('div');
                div.classList.add('tv-cell');
                div.textContent = cell;

                gridContainer.appendChild(div);
            });
        });
    }
    generateTable();


    function addNewCell(a_value, a_weight) {
        
        a_vdw = parseFloat(a_value) / parseFloat(a_weight)

        var newGridData = [
            [...newGridData[0], a_weight],
            [...newGridData[1], a_value],
            [...newGridData[2], a_vdw]
        ];
    }
</script>


</body>
</html>